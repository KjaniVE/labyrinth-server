plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id "org.sonarqube" version "6.0.1.5171"

    // https://imperceptiblethoughts.com/shadow
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    implementation 'io.vertx:vertx-web:4.4.0'
    implementation "io.vertx:vertx-config:4.4.0"
    implementation "io.vertx:vertx-web-openapi:4.4.0"

    testImplementation "io.vertx:vertx-junit5:4.4.0"
    testImplementation "io.vertx:vertx-web-client:4.4.0"

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.4.2'

    // Needed to compile the missing classes.
    implementation "io.vertx:vertx-codegen:4.4.0"

    // FIX WARNING : Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider
    // https://stackoverflow.com/questions/69481239/can-not-find-io-netty-resolver-dns-macos-macosdnsserveraddressstreamprovider
    runtimeOnly 'io.netty:netty-all:4.1.86.Final'

    implementation project(':vertx-web-bearer')
    implementation project(':generic-game-server')
}

tasks.withType(Copy).configureEach {
    filePermissions {
        fileMode(0755)
    }
}

application {
    mainClass = 'com.example.Main'
    applicationDefaultJvmArgs = ['-Dfile.encoding=UTF-8']
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

mainClassName='io.vertx.core.Launcher'
def mainVerticleName = 'game.StartUp'

shadowJar {
    archiveClassifier.set('fat')
    manifest {
        attributes 'Main-Verticle': "$mainVerticleName"
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

run {
    args = ['run', mainVerticleName, "--launcher-class=$mainClassName"]
}

sonar {
    properties {
        property "sonar.projectKey", "KjaniVE_labyrinth-server"
        property "sonar.organization", "kjanive"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}